{
  "openapi": "3.0.1",
  "info": {
    "title": "Event",
    "description": "My ticket master API",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Ticketing",
      "url": "https://example.com",
      "email": "contact@example.com"
    },
    "license": {
      "name": "My ticket master LICX",
      "url": "https://example.com/license"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/events": {
      "post": {
        "tags": [
          "CreateEvent"
        ],
        "summary": "Creates an event.",
        "description": "Sample request:\r\n            \r\n    POST /event",
        "operationId": "CreateEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": ""
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "GetEvents"
        ],
        "summary": "Gets all events.",
        "description": "Sample request:\r\n            \r\n    GET /events",
        "operationId": "GetEvents",
        "responses": {
          "200": {
            "description": "Returns the list of events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponsePagedResponse"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UpdateEvent"
        ],
        "summary": "Updates an event.",
        "description": "Sample request:\r\n            \r\n    PUT /event",
        "operationId": "UpdateEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/venues": {
      "post": {
        "tags": [
          "CreateVenue"
        ],
        "summary": "Creates a venue.",
        "description": "Sample request:\r\n            \r\n    POST /venue",
        "operationId": "CreateVenue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVenueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": ""
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "GetVenues"
        ],
        "summary": "Gets all venues.",
        "description": "Sample request:\r\n            \r\n    GET /venues",
        "operationId": "GetVenues",
        "responses": {
          "200": {
            "description": "Returns the list of venues",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponsePagedResponse"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventId}": {
      "delete": {
        "tags": [
          "DeleteEvent"
        ],
        "summary": "Deletes an event.",
        "description": "Sample request:\r\n            \r\n    DELETE /event/{eventId:guid}",
        "operationId": "DeleteEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "GetEvent"
        ],
        "summary": "Gets an event.",
        "description": "Sample request:\r\n            \r\n    GET /events/{eventId}",
        "operationId": "GetEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Event not found"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/venues/{venueId}": {
      "delete": {
        "tags": [
          "DeleteVenue"
        ],
        "summary": "Deletes a venue.",
        "description": "Sample request:\r\n            \r\n    DELETE /venue/{venueId:guid}",
        "operationId": "DeleteVenue",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventId}/seats": {
      "get": {
        "tags": [
          "GetEventSeats"
        ],
        "summary": "Gets all event seats.",
        "description": "Sample request:\r\n            \r\n    GET /events/{eventId}/seats",
        "operationId": "GetEventSeats",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "The ID of the event to retrieve seats for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSeatResponsePagedResponse"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateEventRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "venueId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CreateVenueRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "venueId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "EventResponsePagedResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventSeatResponse": {
        "type": "object",
        "properties": {
          "seatId": {
            "type": "string",
            "format": "uuid"
          },
          "seatAvailabilityStatus": {
            "$ref": "#/components/schemas/SeatAvailabilityStatusType"
          }
        },
        "additionalProperties": false
      },
      "EventSeatResponsePagedResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSeatResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SeatAvailabilityStatusType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdateEventRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "venueId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "VenueResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VenueResponsePagedResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VenueResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}