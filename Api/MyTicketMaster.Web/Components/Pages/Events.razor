@page "/events"
@attribute [StreamRendering]

<PageTitle>Events</PageTitle>

<h1>Events</h1>

<p>Lists all events.</p>

@if (events == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                @* <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Farenheit">Temp. (F)</th> *@
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in events)
            {
                <tr>
                    <td>@forecast.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Event[]? events;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        events = Enumerable.Range(1, 5).Select(index => new Event
        {
            Name = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

    private class Event
    {
        public required string Name { get; set; }
        
    }
}
